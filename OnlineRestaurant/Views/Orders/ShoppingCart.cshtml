@using OnlineRestaurant.Data.ViewModels;
@using System.Globalization
@model ShoppingCartViewModel

@{
    ViewData["Title"] = "Shopping cart summary";
}


<meta name="description" content="A demo of a payment on Stripe" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="checkout.css" />
    <script src="https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=fetch"></script>
    <script src="https://js.stripe.com/v3/"></script>
<head>
    <style>
         body {
            background-color: #92ba92;
         }
         .form-container{
            background-color: #fff;
         }

         .form-container label{
            color: #525e75; 
         }     
    </style>
</head>
<body>
<div class="container mx-auto form-container p-5">

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">
            <h2>You shopping cart summary</h2>
        </div>
   
        <table class="table bg-white">
            <thead>
                <tr>
                    <th>Selected amount</th>
                    <th>Menu Item</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                {
                    <tr>
                        <td class="align-middle">@item.Amount</td>
                        <td class="align-middle">@item.MenuItem.MenuName</td>
                        <td class="align-middle">@item.MenuItem.Price.ToString("c", new CultureInfo("en-IE"))</td>
                        <td class="align-middle">@((item.Amount*item.MenuItem.Price).ToString("c", new CultureInfo("en-IE")))</td>
                        <td class="align-middle">
                            <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemToShoppingCart"
                               asp-route-id="@item.MenuItem.Id">
                                <i class="bi bi-cart-dash"></i>
                            </a>
                            
                            <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart"
                               asp-route-id="@item.MenuItem.Id">
                                <i class="bi bi-cart-plus"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"></td>
                    <td><b>Total:</b></td>
                    <td>
                        @Model.ShoppingCartTotal.ToString("c", new CultureInfo("en-IE"))
                    </td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
                <div id="paypal-btn"></div>
                <!-- Display a payment form -->
    
                <span style="padding:5px"></span>
                
               <a class="btn btn-outline-primary mt-3" asp-controller="Checkout" asp-action="Index" >Checkout</a>
                <a class="btn btn-outline-success mt-3" asp-controller="MenuItem" asp-action="Index">
                    Add more items
                </a>
            </div>
        </div>

    </div>
    <div>
</div>

 </body>    

@section Scripts{

    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>
        let _total = @Html.Raw(Model.ShoppingCartTotal);
        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AcKRtgL4i68EZ2ZYuYUx3ilihAg2YhL5dtF_m19A8MjBWVOn6ewNS4M_uV8gA3xi98zTcUq38gUHbVFx'
            },
            //Customize button
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,
            //Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'EUR'
                        }
                    }]
                });
            },
            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                    var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                    window.location.href = url;
                });
            }
        }, '#paypal-btn')
    </script>

}







       
